object_DAM
load("/Volumes/Samsung_T5/20250125-LGY-untargeted/massdataset/08.object_merge.rda")
library(tidymass)
library(tidyverse)
object_merge %>% extract_sample_info()
object = object_merge %>%
mutate_fc(control_sample_id = paste0("S_",c(49,50,51,53,54)),
case_sample_id = paste0("S_",c(61:65)),
mean_median = "mean")
object =
mutate_p_value(
object = object,
control_sample_id = paste0("S_",c(49,50,51,53,54)),
case_sample_id = paste0("S_",c(61:65)),
method = "t.test",
p_adjust_methods = "BH"
)
object %>%
activate_mass_dataset(what = "annotation_table") %>%
filter(!is.na(Level)) %>%
filter(Level == 1 | Level == 2) %>%
group_by(Compound.name) %>%
dplyr::filter(Level == min(Level)) %>%
dplyr::filter(SS == max(SS)) %>%
dplyr::slice_head(n = 1)
object %>% extract_variable_info_note()
diff_metabolites = object %>%
activate_mass_dataset(what = "annotation_table") %>%
filter(!is.na(Level)) %>%
filter(Level == 1 | Level == 2) %>%
group_by(Compound.name) %>%
dplyr::filter(Level == min(Level)) %>%
dplyr::filter(SS == max(SS)) %>%
dplyr::slice_head(n = 1) %>%
activate_mass_dataset(what = "variable_info") %>%
dplyr::filter(p_value <= 0.05 & abs(log2(fc)) >=1)
diff_metabolites
kegg_id <-
diff_metabolites$KEGG.ID
kegg_id
diff_metabolites
diff_metabolites = object %>%
activate_mass_dataset(what = "annotation_table") %>%
filter(!is.na(Level)) %>%
filter(Level == 1 | Level == 2) %>%
group_by(Compound.name) %>%
dplyr::filter(Level == min(Level)) %>%
dplyr::filter(SS == max(SS)) %>%
dplyr::slice_head(n = 1) %>%
activate_mass_dataset(what = "variable_info") %>%
dplyr::filter(p_value <= 0.05 & abs(log2(fc)) >=1)  %>%
extract_variable_info()
diff_metabolites
kegg_id <-
diff_metabolites$KEGG.ID
kegg_id <-
kegg_id[!is.na(kegg_id)]
kegg_id
result <-
enrich_kegg(query_id = kegg_id,
query_type = "compound",
id_type = "KEGG",
pathway_database = pathway_database,
p_cutoff = 0.05,
p_adjust_method = "BH",
threads = 3)
get_kegg_pathway2 = function (local = TRUE, organism = "zma", threads = 3) {
# organism = match.arg(organism)
if (local) {
if (organism == "hsa") {
data("kegg_hsa_pathway", envir = environment())
message(crayon::yellow("This database is downloaded in",
kegg_hsa_pathway@database_info$version))
return(kegg_hsa_pathway)
}
} else {
message(crayon::yellow("It may take a while...\n"))
#   organism = match.arg(organism)
pathway_ID <- KEGGREST::keggList(database = "pathway",
organism = organism) %>% names() %>% unique() %>%
stringr::str_replace_all(., "path:", "")
kegg_hsa_pathway_database <- pbapply::pblapply(pathway_ID,
function(x) {
KEGGREST::keggGet(dbentries = x)[[1]]
})
pathway_id = kegg_hsa_pathway_database %>% purrr::map(function(x) {
unname(x$ENTRY)
}) %>% unlist()
pathway_name = kegg_hsa_pathway_database %>% purrr::map(function(x) {
unname(x$PATHWAY_MAP)
}) %>% unlist()
pathway_name = kegg_hsa_pathway_database %>% purrr::map(function(x) {
unname(x$PATHWAY_MAP)
}) %>% unlist()
describtion = kegg_hsa_pathway_database %>% purrr::map(function(x) {
unname(x$DESCRIPTION)
})
pathway_class = kegg_hsa_pathway_database %>% purrr::map(function(x) {
unname(x$CLASS)
})
gene_list = kegg_hsa_pathway_database %>% purrr::map(function(x) {
gene = x$GENE
if (is.null(gene)) {
return(data.frame())
}
data.frame(KEGG.ID = gene[seq(1, length(gene) - 1,
by = 2)], Gene.name = gene[seq(2, length(gene),
by = 2)], stringsAsFactors = FALSE)
})
compound_list = kegg_hsa_pathway_database %>% purrr::map(function(x) {
data.frame(KEGG.ID = names(x$COMPOUND), Compound.name = x$COMPOUND,
stringsAsFactors = FALSE)
})
reference_list = kegg_hsa_pathway_database %>% purrr::map(function(x) {
purrr::map(x$REFERENCE, .f = function(y) {
y = lapply(y, function(z) {
if (length(z) > 1) {
paste(z, collapse = "{}")
}
else {
z
}
})
y = unlist(y)
if (any(names(y) == "JOURNAL")) {
names(y)[names(y) == "JOURNAL"] = "JOURNAL1"
c(y, JOURNAL2 = "")
}
}) %>% do.call(rbind, .) %>% as.data.frame()
})
related_disease = kegg_hsa_pathway_database %>% purrr::map(function(x) {
data.frame(Disease.ID = names(x$DISEASE), Disease.name = x$DISEASE,
stringsAsFactors = FALSE)
})
related_module = kegg_hsa_pathway_database %>% purrr::map(function(x) {
data.frame(Module.ID = names(x$MODULE), Module.name = x$MODULE,
stringsAsFactors = FALSE)
})
pathway = new(Class = "pathway_database", database_info = list(source = "KEGG",
version = as.character(Sys.Date())), pathway_id = pathway_id,
pathway_name = pathway_name, describtion = describtion,
pathway_class = pathway_class, gene_list = gene_list,
compound_list = compound_list, protein_list = list(),
reference_list = reference_list, related_disease = related_disease,
related_module = related_module)
if (length(pathway@gene_list) == 0) {
pathway@gene_list = vector(mode = "list", length = length(pathway@pathway_id)) %>%
purrr::map(function(x) {
x = data.frame()
x
})
}
if (length(pathway@compound_list) == 0) {
pathway@compound_list = vector(mode = "list", length = length(pathway@pathway_id)) %>%
purrr::map(function(x) {
x = data.frame()
x
})
}
if (length(pathway@protein_list) == 0) {
pathway@protein_list = vector(mode = "list", length = length(pathway@pathway_id)) %>%
purrr::map(function(x) {
x = data.frame()
x
})
}
return(pathway)
}
}
ath_pathway = get_kegg_pathway(local = FALSE,organism = "ath")
ath_pathway = get_kegg_pathway2(local = FALSE,organism = "ath")
pathway_class =
metpath::pathway_class(ath_pathway)
remain_idx =
pathway_class %>%
unlist() %>%
stringr::str_detect("Disease") %>%
`!`() %>%
which()
pathway_database =
ath_pathway[remain_idx]
diff_metabolites = object %>%
activate_mass_dataset(what = "annotation_table") %>%
filter(!is.na(Level)) %>%
filter(Level == 1 | Level == 2) %>%
group_by(Compound.name) %>%
dplyr::filter(Level == min(Level)) %>%
dplyr::filter(SS == max(SS)) %>%
dplyr::slice_head(n = 1) %>%
activate_mass_dataset(what = "variable_info") %>%
dplyr::filter(p_value <= 0.05 & abs(log2(fc)) >=1)  %>%
extract_variable_info()
kegg_id <-
diff_metabolites$KEGG.ID
kegg_id <-
kegg_id[!is.na(kegg_id)]
result <-
enrich_kegg(query_id = kegg_id,
query_type = "compound",
id_type = "KEGG",
pathway_database = pathway_database,
p_cutoff = 0.05,
p_adjust_method = "BH",
threads = 3)
result
enrich_bar_plot(object = result,
x_axis = "p_value",
cutoff = 0.05)
enrich_scatter_plot(object = result, y_axis = "p_value", y_axis_cutoff = 0.05)
enrich_network(
object = result,
point_size = "p_value",
p_cutoff = 0.05,
only_significant_pathway = TRUE
)
diff_metabolites = object %>%
# activate_mass_dataset(what = "annotation_table") %>%
# filter(!is.na(Level)) %>%
# filter(Level == 1 | Level == 2) %>%
# group_by(Compound.name) %>%
# dplyr::filter(Level == min(Level)) %>%
# dplyr::filter(SS == max(SS)) %>%
# dplyr::slice_head(n = 1) %>%
activate_mass_dataset(what = "variable_info") %>%
dplyr::filter(p_value <= 0.05 & abs(log2(fc)) >=1)  %>%
extract_variable_info()
kegg_id <-
diff_metabolites$KEGG.ID
kegg_id <-
kegg_id[!is.na(kegg_id)]
kegg_id
result <-
enrich_kegg(query_id = kegg_id,
query_type = "compound",
id_type = "KEGG",
pathway_database = pathway_database,
p_cutoff = 0.05,
p_adjust_method = "BH",
threads = 3)
enrich_bar_plot(object = result,
x_axis = "p_value",
cutoff = 0.05)
devtools::document()
result
result@result
result@result %>% as.tibble()
library(tidymass)
library(tidymassshiny)
library(plantmdb)
run_tidymass_shiny()
run_tidymass_shiny()
get_kegg_pathway
library(tidymass)
tidymass::update_tidymass()
tidymass::update_tidymass(packages = "all",from = "gitlab")
devtools::install_gitlab("tidymass/metpath")
devtools::install_github("tidymass/metpath")
devtools::install_github("tidymass/massdatabase")
library(tidymass)
library(tidyverse)
library(metpath)
library(massdatabase)
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/08.object_merge.rda")
object_dam <-
object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
dplyr::filter(!is.na(Level)) %>%
dplyr::filter(Level == 1 | Level == 2) %>%
group_by(Compound.name) %>%
dplyr::filter(Level = min(Level)) %>%
dplyr::filter(SS == max(SS)) %>%
slice_head(n = 1)
object_dam <-
object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
dplyr::filter(!is.na(Level)) %>%
dplyr::filter(Level == 1 | Level == 2) %>%
group_by(Compound.name) %>%
dplyr::filter(Level == min(Level)) %>%
dplyr::filter(SS == max(SS)) %>%
slice_head(n = 1)
object_dam %>% extract_sample_info()
object_dam %>% extract_sample_info() %>% dplyr::select(group) %>% unique()
control_sample_id =
object_dam %>%
activate_mass_dataset(what = "sample_info") %>%
dplyr::filter(group == "T7-Maturity_seeds-KL_K") %>%
pull(sample_id)
control_sample_id
case_sample_id =
object_dam %>%
activate_mass_dataset(what = "sample_info") %>%
dplyr::filter(group == "T7-Maturity_seeds-KL_HF_1") %>%
pull(sample_id)
object_dam <-
mutate_fc(
object = object_dam,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
mean_median = 'mean'
)
object_dam <-
mutate_p_value(
object = object_dam,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
method = "t.test",
p_adjust_methods = "BH"
)
volcano_plot(
object = object_dam,
text_for = "Compound.name",
point_size_scale = "p_value"
) + scale_size_continuous(range = c(0.5, 5))
volcano_plot(
object = object_dam,add_text = TRUE,
text_for = "Compound.name",
point_size_scale = "p_value"
) + scale_size_continuous(range = c(0.5, 5))
volcano_plot(
object = object_dam,add_text = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value"
) + scale_size_continuous(range = c(0.5, 5))
volcano_plot(
object = object_dam,add_text = TRUE,log2_fc = "TRUE"
text_from = "Compound.name",
volcano_plot(
object = object_dam,add_text = TRUE,log2_fc = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value"
) + scale_size_continuous(range = c(0.5, 5))
volcano_plot(
object = object_dam,
add_text = TRUE,
log2_fc = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value"
)
volcano_plot(
object = object_dam,
add_text = TRUE,
log2_fc = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value"
)+xlim(c(-5,5))
volcano_plot(
object = object_dam,
add_text = TRUE,
log2_fc = FALSE,
text_from = "Compound.name",
point_size_scale = "p_value"
)+xlim(c(-5,5))
volcano_plot(
object = object_dam,
add_text = TRUE,
log2_fc = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value"
)+xlim(c(-5,5))
differential_metabolites <-
extract_variable_info(object = object) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value_adjust < 0.05)
differential_metabolites <-
extract_variable_info(object = object_dam) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value_adjust < 0.05)
differential_metabolites
diff_metabolites <-
object_dam %>%
activate_mass_dataset(what = "variable_info") %>%
filter(p_value_adjust < 0.05) %>%
extract_variable_info()
diff_metabolites
data("kegg_hsa_pathway", package = "metpath")
get_pathway_class(kegg_hsa_pathway)
pathway_class =
metpath::pathway_class(kegg_hsa_pathway)
remain_idx =
pathway_class %>%
unlist() %>%
stringr::str_detect("Disease") %>%
`!`() %>%
which()
remain_idx
pathway_database =
kegg_hsa_pathway[remain_idx]
kegg_id <-
diff_metabolites$KEGG.ID
kegg_id <-
kegg_id[!is.na(kegg_id)]
kegg_id
result <-
enrich_kegg(query_id = kegg_id,
query_type = "compound",
id_type = "KEGG",
pathway_database = pathway_database,
p_cutoff = 0.05,
p_adjust_method = "BH",
threads = 3)
enrich_bar_plot(object = result,
x_axis = "p_value",
cutoff = 0.05)
enrich_scatter_plot(object = result, y_axis = "p_value", y_axis_cutoff = 0.05)
enrich_network(
object = result,
point_size = "p_value",
p_cutoff = 0.05,
only_significant_pathway = TRUE
)
result
diff_metabolites
diff_metabolites$HMDB.ID
diff_metabolites$HMDB.ID %>% is.na()
diff_metabolites$HMDB.ID
diff_metabolites
hmdb_id = diff_metabolites %>% filter(is.na(HMDB.ID)) %>%
pull(HMDB.ID)
hmdb_id
hmdb_id = diff_metabolites %>% filter(!is.na(HMDB.ID)) %>%
pull(HMDB.ID)
hmdb_id
result_hmdb <-
enrich_hmdb(query_id = hmdb_id)
data("hmdb_hsa_pathway", package = "metpath")
get_pathway_class(hmdb_hsa_pathway)
data("hmdb_pathway", package = "metpath")
get_pathway_class(hmdb_pathway)
result_hmdb <-
enrich_hmdb(query_id = hmdb_id,pathway_database = hmdb_pathway)
enrich_bar_plot(result_hmdb)
result_hmdb
hmdb_id
hmdb_pathway
result_hmdb <-
enrich_hmdb(query_id = hmdb_id,query_type = "Compound.name",
pathway_database = hmdb_pathway)
result_hmdb <-
enrich_hmdb(query_id = hmdb_id,query_type = "compound",
pathway_database = hmdb_pathway)
result_hmdb
pathway_database
result_hmdb <-
enrich_hmdb(query_id = hmdb_id,
query_type = "compound",id_type = 'HMDB',
p_cutoff = 0.05,
p_adjust_method = "BH",
threads = 3,
pathway_database = hmdb_pathway),
result_hmdb <-
enrich_hmdb(query_id = hmdb_id,
query_type = "compound",
id_type = 'HMDB',
p_cutoff = 0.05,
p_adjust_method = "BH",
threads = 3,
pathway_database = hmdb_pathway)
result_hmdb
hmdb_id
result_hmdb <-
enrich_hmdb(query_id = hmdb_id,
query_type = "compound",
id_type = 'HMDB',
p_cutoff = 1,
p_adjust_method = "BH",
threads = 3,
pathway_database = hmdb_pathway)
enrich_bar_plot(result_hmdb)
result_hmdb
enrich_hmdb
enrich_kegg
library(tidyverse)
library(tidymass)
library(tidymassshiny)
run_tidymass_shiny()
object_dam@ms2_data
length(object_dam@ms2_data)
is.null(object_dam@ms2_data)
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/01.object_neg_raw.rda")
is.null(object_neg_raw)
object_neg_raw@ms2_data
length(object_neg_raw)
object_neg_raw@ms2_data %>% length()
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/05.object_neg_norm.rda")
length(object_neg_norm@ms2_data)
object_neg_norm@ms2_data
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/07.object_neg_anno.rda")
length(object_neg_anno@ms2_data)
devtools::document()
run_tidymass_shiny()
library(plantmdb)
run_tidymass_shiny()
metid::rp.neg
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/06.object_pos_ms2.rda")
object_x = object_pos_ms2 %>%
annotate_metabolites_mass_dataset(database = mona_database0.0.4)
library(tidyverse)
library(tidymass)
library(tidymassshiny)
library(plantmdb)
object_x = object_pos_ms2 %>%
annotate_metabolites_mass_dataset(database = mona_database0.0.4)
devtools::document()
library(tidyverse)
library(tidymass)
library(plantmdb)
run_tidymass_shiny()
devtools::document()
metpath::enrich_kegg
p.adjust.methods
parallel::detectCores()
