na_freq_check = purrr::reduce(na_freq_filter, `|`)
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
filter(na_freq <= qc_na_freq & na_freq_check)
}
}
vari_ori <- object %>% extract_variable_info()
vari_filter <- object_mv %>% extract_variable_info()
vari_noisy = anti_join(vari_ori ,vari_filter, by = "variable_id")
out = list(
noisy_tbl = vari_noisy,
object_mv = object_mv
)
return(out)
}
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
library(tidymass)
library(tidyverse)
library(tidymassshiny)
run_tidymass_shiny(\)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
library(tidymassshiny)
run_tidymass_shiny()
library(tidymass)
library(tidyverse)
library(tidymassshiny)
run_tidymass_shiny()
library(tidyverse)
library(tidymass)
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/POS/Objects/step1/object_pos_raw.rda")
find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.33,S_na_freq = 0.2)
x = find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.33,S_na_freq = 0.2)
x$noisy_tbl
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
x = find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.33,S_na_freq = 0.2)
x$noisy_tbl
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
find_noise
x$noisy_tbl
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
x = find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.33,S_na_freq = 0.2)
x$noisy_tbl
find_noise
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
x = find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.33,S_na_freq = 0.2)
object = object_pos_raw
tag = 'group'
qc_na_freq = 0.33
S_na_freq = 0.2
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
temp_keys = temp_sample_info %>% pull(key) %>% unique()
temp_keys
object <-
object %>%
activate_mass_dataset("sample_info") %>%
left_join(temp_sample_info %>% select(sample_id,key),by = "sample_id")
library(tidyverse)
object <-
object %>%
activate_mass_dataset("sample_info") %>%
left_join(temp_sample_info %>% select(sample_id,key),by = "sample_id")
object <-
object %>%
activate_mass_dataset("sample_info") %>%
left_join(temp_sample_info %>%
dplyr::select(sample_id,key),by = "sample_id")
object
temp_keys
temp_sample_info
i = 1
temp_keys
temp_keys[i]
#> na_freq
for (i in 1:length(temp_keys)) {
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(key == temp_keys[i]) %>%
pull(sample_id)
if (temp_keys[i] == "QC") {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
} else {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
colnames_vari = object %>%
extract_variable_info() %>%
colnames()
na_freq_cols = colnames_vari[grep("na_freq", colnames_vari)]
na_freq_filter = purrr::map(na_freq_cols, ~ object %>% pull(.x) <= S_na_freq)
na_freq_check = purrr::reduce(na_freq_filter, `|`)
}
}
i  =1
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(key == temp_keys[i]) %>%
pull(sample_id)
temp_id
object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
#> na_freq
for (i in 1:length(temp_keys)) {
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(key == temp_keys[i]) %>%
pull(sample_id)
if (temp_keys[i] == "QC") {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
} else {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
}
}
object
object = object_pos_raw
object
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
temp_keys = temp_sample_info %>% pull(key) %>% unique()
object <-
object %>%
activate_mass_dataset("sample_info") %>%
left_join(temp_sample_info %>%
dplyr::select(sample_id,key),by = "sample_id")
#> na_freq
for (i in 1:length(temp_keys)) {
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(key == temp_keys[i]) %>%
pull(sample_id)
if (temp_keys[i] == "QC") {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
} else {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
}
}
object
colnames_vari = object %>%
extract_variable_info() %>%
colnames()
colnames_vari
na_freq_cols = colnames_vari[grep("na_freq", colnames_vari)]
na_freq_cols
na_freq_filter = purrr::map(na_freq_cols, ~ object %>% pull(.x) <= S_na_freq)
na_freq_filter
purrr::map(na_freq_cols, ~ object %>% pull(.x) <= S_na_freq)
na_freq_cols
object
na_freq_cols
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
filter(
na_freq <= qc_na_freq,
if_any(starts_with("na_freq.",~.<=S_na_freq))
)
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
filter(
na_freq <= qc_na_freq,
if_any(starts_with("na_freq."), ~ . <= S_na_freq)
)
object_mv
vari_ori <- object %>% extract_variable_info()
vari_filter <- object_mv %>% extract_variable_info()
vari_noisy = anti_join(vari_ori ,vari_filter, by = "variable_id")
vari_noisy
S_na_freq
qc_na_freq
qc_na_freq = 0.2
S_na_freq = 0.5
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
filter(
na_freq <= qc_na_freq,
if_any(starts_with("na_freq."), ~ . <= S_na_freq)
)
vari_ori <- object %>% extract_variable_info()
vari_filter <- object_mv %>% extract_variable_info()
vari_noisy = anti_join(vari_ori ,vari_filter, by = "variable_id")
vari_noisy
tag = "group"
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
object = object_pos_raw
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
temp_keys = temp_sample_info %>% pull(key) %>% unique()
object <-
object %>%
activate_mass_dataset("sample_info") %>%
left_join(temp_sample_info %>%
dplyr::select(sample_id,key),by = "sample_id")
#> na_freq
for (i in 1:length(temp_keys)) {
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(key == temp_keys[i]) %>%
pull(sample_id)
if (temp_keys[i] == "QC") {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
} else {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
}
}
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
filter(
na_freq <= qc_na_freq,
if_any(starts_with("na_freq."), ~ . <= S_na_freq)
)
vari_ori <- object %>% extract_variable_info()
vari_filter <- object_mv %>% extract_variable_info()
vari_noisy = anti_join(vari_ori ,vari_filter, by = "variable_id")
out = list(
noisy_tbl = vari_noisy,
object_mv = object_mv
)
vari_noisy
tag
object
tag
temp_sample_info
tag
object = object_pos_raw
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
object = object_pos_raw
tag = 'group'
qc_na_freq = 0.2
S_na_freq = 0.5
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
temp_sample_info
tag = 'sample_group'
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
tag
temp_sample_info
temp_keys = temp_sample_info %>% pull(key) %>% unique()
temp_keys
object <-
object %>%
activate_mass_dataset("sample_info") %>%
left_join(temp_sample_info %>%
dplyr::select(sample_id,key),by = "sample_id")
#> na_freq
for (i in 1:length(temp_keys)) {
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(key == temp_keys[i]) %>%
pull(sample_id)
if (temp_keys[i] == "QC") {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
} else {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
}
}
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
filter(
na_freq <= qc_na_freq,
if_any(starts_with("na_freq."), ~ . <= S_na_freq)
)
object_mv
vari_ori <- object %>% extract_variable_info()
vari_filter <- object_mv %>% extract_variable_info()
vari_noisy = anti_join(vari_ori ,vari_filter, by = "variable_id")
vari_noisy
out = list(
noisy_tbl = vari_noisy,
object_mv = object_mv
)
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
object_pos_raw
object_pos_raw
object_pos_raw %>% extract_sample_info()
object_pos_raw <-
object_pos_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
mutate_all(group = sample_group)
object_pos_raw <-
object_pos_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
mutate(group = sample_group)
object_pos_raw %>% extract_sample_info()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
object_neg_raw <-
object_neg_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
mutate(group = sample_group)
object_neg_raw %>% extract_sample_info()
save(object_neg_raw,"/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
save(object_neg_raw,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
save(object_pos_raw,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
devtools::document()
devtools::document()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
x = find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.2,S_na_freq = 0.5)
object_pos_raw <-
object_pos_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
mutate(group = sample_group)
object_pos_raw %>% extract_sample_info()
object_neg_raw <-
object_neg_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
mutate(group = sample_group)
object_neg_raw %>% extract_sample_info()
save(object_neg_raw,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
save(object_pos_raw,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
find_noise_multiple
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
x = find_noise(object = object_pos_raw,tag = 'group',qc_na_freq = 0.2,S_na_freq = 0.5)
x = find_noise_multiple(object = object_pos_raw,tag = 'group',qc_na_freq = 0.2,S_na_freq = 0.5)
x
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
install.packages('PubChemR')
result <- get_pug_view(annotation = "data", identifier = "1234", domain = "compound", output = "JSON")
library(PubChemR)
result <- get_pug_view(annotation = "data", identifier = "1234", domain = "compound", output = "JSON")
result
result <- get_pug_view(annotation = "data", identifier = "1234", domain = "compound", output = "SVG")
result
result <- get_pug_view(annotation = "data", identifier = "1234", domain = "compound", output = "JSON")
retrieve(object = result, .slot = "Section",  .to.data.frame = FALSE)
retrieve(object = structures, .slot = "Section")
structures <- section(object = result, .id = "S1")
retrieve(object = structures, .slot = "Section")
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
sample_info <- read.csv("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/sample_info.csv")
sample_info
object_pos_raw <-
object_pos_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
dplyr::select(sample_id) %>%
left_join(sample_info)
library(tidyverse)
library(tidymass)
object_pos_raw <-
object_pos_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
dplyr::select(sample_id) %>%
left_join(sample_info)
object_pos_raw %>% extract_sample_info()
object_pos_raw
object_neg_raw <-
object_neg_raw %>%
activate_mass_dataset(what = 'sample_info') %>%
dplyr::select(sample_id) %>%
left_join(sample_info)
save(object_neg_raw,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_neg_raw.rda")
save(object_pos_raw,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
object_neg_raw
object_neg_raw %>% extract_sample_info()
