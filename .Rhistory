set_label <-
function (query_id,
database,
threads = parallel::detectCores() - 2) {
future::plan(strategy = future::multisession, workers = threads)
return_result =
furrr::future_map(
.x = database,
.f = function(x) {
temp = match(query_id, x)
temp[!is.na(temp)] = 1
temp[is.na(temp)] = 0
temp
}
) %>%
do.call(cbind, .) %>%
as.data.frame()
rownames(return_result) = query_id
return_result
}
all_matrix <- set_label(query_id = all_id, database = database,
threads = threads)
all_matrix2 <- all_matrix[, colSums(all_matrix) != 0, drop = FALSE]
if (ncol(all_matrix2) < 2) {
return(NULL)
}
sig_matrix <- set_label(query_id = sig_id, database = database,
threads = threads)
sig_matrix <- sig_matrix[, colSums(all_matrix) != 0, drop = FALSE]
p_value = furrr::future_map(.x = 1:ncol(all_matrix2), .f = function(i) {
a1 <- sum(sig_matrix[, i])
a2 <- sum(all_matrix2[, i]) - sum(sig_matrix[, i])
a3 <- length(sig_id) - a1
a4 <- (length(all_id) - length(sig_id)) - a2
tab <- t(matrix(c(a1, a2, a3, a4), 2))
if (method == "hypergeometric") {
phyper(q = a1 - 1, m = sum(all_matrix2[, i]), n = num_all -
sum(all_matrix2[, i]), k = num_sig, lower.tail = FALSE)
}
else {
check <- tryCatch({
resfish <- fisher.test(tab, alternative = "greater")
}, error = function(e) {
NA
})
if (!is(object = check, class2 = "htest")) {
return(1)
}
else {
resfish <- fisher.test(tab, alternative = "greater")
return(resfish$p.value)
}
}
}, .progress = TRUE) %>% unlist()
method = "KEGG"
p_value = furrr::future_map(.x = 1:ncol(all_matrix2), .f = function(i) {
a1 <- sum(sig_matrix[, i])
a2 <- sum(all_matrix2[, i]) - sum(sig_matrix[, i])
a3 <- length(sig_id) - a1
a4 <- (length(all_id) - length(sig_id)) - a2
tab <- t(matrix(c(a1, a2, a3, a4), 2))
if (method == "hypergeometric") {
phyper(q = a1 - 1, m = sum(all_matrix2[, i]), n = num_all -
sum(all_matrix2[, i]), k = num_sig, lower.tail = FALSE)
}
else {
check <- tryCatch({
resfish <- fisher.test(tab, alternative = "greater")
}, error = function(e) {
NA
})
if (!is(object = check, class2 = "htest")) {
return(1)
}
else {
resfish <- fisher.test(tab, alternative = "greater")
return(resfish$p.value)
}
}
}, .progress = TRUE) %>% unlist()
p_value_adjust <- p.adjust(p_value, method = p_adjust_method)
result <- data.frame(pathway_info, p_value, p_value_adjust)
result
result$all_number <- furrr::future_map(.x = result$pathway_id,
.f = function(x) {
length(database[[x]])
}) %>% unlist()
result$mapped_id <- furrr::future_map(.x = result$pathway_id,
.f = function(x) {
paste(query_id[query_id %in% database[[x]]], collapse = ";")
}) %>% unlist()
result$mapped_number <- furrr::future_map(.x = result$pathway_id,
.f = function(x) {
sum(query_id %in% database[[x]])
}) %>% unlist()
result$mapped_percentage <- furrr::future_map(.x = result$pathway_id,
.f = function(x) {
sum(query_id %in% database[[x]]) * 100/length(database[[x]])
}) %>% unlist()
result <- result %>% plyr::dlply(.variables = plyr::.(pathway_name)) %>%
purrr::map(function(x) {
if (nrow(x) == 1) {
return(x)
}
else {
x = x %>% dplyr::filter(p_value_adjust == min(p_value_adjust)) %>%
dplyr::filter(mapped_number == max(mapped_number)) %>%
dplyr::filter(all_number == max(all_number))
x[1, , drop = FALSE]
}
}) %>% do.call(rbind, .) %>% as.data.frame()
kegg_zma_pathway
View(result)
kegg_zma_pathway@pathway_id
kegg_hsa_pathway@pathway_id
kegg_zma_pathway@pathway_id <- kegg_zma_pathway@pathway_id %>% unlist()
kegg_zma_pathway
kegg_zma_pathway@pathway_id
names(kegg_zma_pathway@pathway_id) = "NULL"
kegg_zma_pathway@pathway_id
kegg_zma_pathway <- massdatabase::convert_kegg2metpath(kegg_zma_pathway)
kegg_zma_pathway <- read_kegg_pathway()
kegg_zma_pathway <- massdatabase::convert_kegg2metpath(kegg_zma_pathway)
kegg_zma_pathway@pathway_id %>% unlist() %>% as.character()
kegg_zma_pathway@pathway_id <- kegg_zma_pathway@pathway_id %>% unlist() %>% as.character()
kegg_zma_pathway@pathway_name
kegg_hsa_pathway@pathway_name
kegg_zma_pathway@pathway_name<- kegg_zma_pathway@pathway_name %>% unlist() %>% as.character()
kegg_zma_pathway@pathway_name
kegg_hsa_pathway@describtion
kegg_zma_pathway@describtion
kegg_hsa_pathway@database_info
kegg_zma_pathway@database_info
kegg_hsa_pathway@pathway_class
kegg_zma_pathway@pathway_class
kegg_hsa_pathway@gene_list
kegg_zma_pathway@gene_list
kegg_hsa_pathway@compound_list
kegg_zma_pathway@compound_list
result <-
enrich_pathways(
query_id = kegg_id,
query_type = "compound",
id_type = 'KEGG',
pathway_database = kegg_zma_pathway,
threads = 5
)
kegg_zma_pathway <- read_kegg_pathway()
kegg_zma_pathway <- massdatabase::convert_kegg2metpath(kegg_zma_pathway)
kegg_zma_pathway@pathway_id
kegg_zma_pathway@pathway_id <- kegg_zma_pathway@pathway_id %>% unlist() %>% as.character()
kegg_zma_pathway@pathway_name<- kegg_zma_pathway@pathway_name %>% unlist() %>% as.character()
enrich_bar_plot(result)
enrich_scatter_plot(result)
result
enrich_bar_plot(result,top = 10)
enrich_bar_plot(result,cutoff = 'p_value')
enrich_bar_plot(result)
enrich_scatter_plot(result)
result@result
result@result %>% tibble()
enrich_bar_plot(result,cutoff = 'p_value')
enrich_bar_plot(result,cutoff = 'p_value',x_axis = 'p_value')
enrich_bar_plot
enrich_bar_plot(result,cutoff = 0.05,x_axis = 'p_value')
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(Compound.name) %>%
slice_head(n = 1)
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(Compound.name) %>%
slice_head(n = 1)
library(tidymass)
library(tidyverse)
library(tidymassshiny)
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/08.object_merge.rda")
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(Compound.name) %>%
slice_head(n = 1)
control_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-cotyledon-D7") %>%
pull(sample_id)
case_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-root-D7") %>%
pull(sample_id)
object <-
mutate_fc(object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
mean_median = "mean")
object <-
mutate_p_value(
object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
method = "t.test",
p_adjust_methods = "BH"
)
volcano_plot(object = object,
add_text = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value") +
scale_size_continuous(range = c(0.5, 5))
differential_metabolites <-
extract_variable_info(object = object) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value_adjust < 0.05)
differential_metabolites <-
extract_variable_info(object = object) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value < 0.05)
kegg_id <-
differential_metabolites$KEGG.ID
kegg_id <-
kegg_id[!is.na(kegg_id)]
result <-
enrich_pathways(
query_id = kegg_id,
query_type = "compound",
id_type = 'KEGG',
pathway_database = kegg_zma_pathway,
threads = 5
)
enrich_bar_plot(result,cutoff = 0.05,x_axis = 'p_value')
enrich_scatter_plot(result)
enrich_scatter_plot(result,y_axis = 'p_value')
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(Compound_id) %>%
dplyr::slice_min(Level) %>%
dplyr::slice_max(Total.score) %>%
ungroup() %>%
group_by(Compound_name) %>%
dplyr::slice_min(Level) %>%
dplyr::slice_max(Total.score) %>%
control_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-cotyledon-D7") %>%
pull(sample_id)
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variabel_id) %>%
dplyr::slice_min(Level) %>%
dplyr::slice_max(Total.score) %>%
ungroup() %>%
group_by(Compound_name) %>%
dplyr::slice_min(Level) %>%
dplyr::slice_max(Total.score)
object_merge %>% extract_annotation_table()
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(Level) %>%
dplyr::slice_max(Total.score) %>%
ungroup() %>%
group_by(Compound_name) %>%
dplyr::slice_min(Level) %>%
dplyr::slice_max(Total.score)
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(order_by = Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1) %>%
ungroup() %>%
group_by(Compound_name) %>%
dplyr::slice_min(Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1)
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(order_by = Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1) %>%
dplyr::ungroup() %>%
group_by(Compound_name) %>%
dplyr::slice_min(Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1)
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(order_by = Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1) %>%
group_by(Compound_name) %>%
dplyr::slice_min(Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1)
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(order_by = Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1) %>%
group_by(Compound.name) %>%
dplyr::slice_min(Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1)
control_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-cotyledon-D7") %>%
pull(sample_id)
case_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-root-D7") %>%
pull(sample_id)
object <-
mutate_fc(object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
mean_median = "mean")
object <-
mutate_p_value(
object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
method = "t.test",
p_adjust_methods = "BH"
)
volcano_plot(object = object,
add_text = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value") +
scale_size_continuous(range = c(0.5, 5))
differential_metabolites <-
extract_variable_info(object = object) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value < 0.05)
library(massdatabase)
massdatabase::download_kegg_pathway(organism = 'zma')
kegg_zma_pathway <- read_kegg_pathway()
kegg_zma_pathway <- massdatabase::convert_kegg2metpath(kegg_zma_pathway)
kegg_zma_pathway@pathway_id <- kegg_zma_pathway@pathway_id %>% unlist() %>% as.character()
kegg_zma_pathway@pathway_name<- kegg_zma_pathway@pathway_name %>% unlist() %>% as.character()
kegg_zma_pathway@compound_list
kegg_id <-
differential_metabolites$KEGG.ID
kegg_id <-
kegg_id[!is.na(kegg_id)]
result <-
enrich_pathways(
query_id = kegg_id,
query_type = "compound",
id_type = 'KEGG',
pathway_database = kegg_zma_pathway,
threads = 5
)
enrich_bar_plot(result,cutoff = 0.05,x_axis = 'p_value')
enrich_scatter_plot(result,y_axis = 'p_value')
enrich_bar_plot(result,cutoff = 0.05,x_axis = 'p_value')
enrich_scatter_plot(result,y_axis = 'p_value')
metpath::enrich_network(result)
metpath::enrich_network(object = object)
metpath::enrich_network(object = result)
metpath::enrich_network(object = result,only_significant_pathway = TRUE,threads = 5)
enrich_network
result
result <-
enrich_pathways(
query_id = kegg_id,
query_type = "compound",
id_type = 'KEGG',
pathway_database = kegg_hsa_pathway,
threads = 5
)
enrich_bar_plot(result,cutoff = 0.05,x_axis = 'p_value')
enrich_scatter_plot(result,y_axis = 'p_value')
metpath::enrich_network(object = result,only_significant_pathway = TRUE,threads = 5)
result <-
enrich_pathways(
query_id = kegg_id,
query_type = "compound",
id_type = 'KEGG',
pathway_database = kegg_zma_pathway,
threads = 5
)
massdatabase::download_kegg_pathway(organism = 'ath')
kegg_ath_pathway <- read_kegg_pathway()
kegg_ath_pathway
kegg_ath_pathway <- massdatabase::convert_kegg2metpath(kegg_ath_pathway)
kegg_ath_pathway@pathway_id
kegg_zma_pathway@pathway_name
kegg_ath_pathway@pathway_name
convert_kegg2metpath
kegg_ath_pathway <- read_kegg_pathway()
lapply(kegg_ath_pathway,function(x) x$pathway_id)
massdatabase::download_kegg_pathway(organism = 'hsa')
kegg_hsa_pathway <- read_kegg_pathway()
lapply(kegg_hsa_pathway,function(x) x$pathway_id)
remotes::install_github("tidymass/massdataset")
remotes::install_github("tidymass/massdatabase")
library(tidymass)
library(tidyverse)
library(tidymassshiny)
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/08.object_merge.rda")
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(order_by = Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1) %>%
group_by(Compound.name) %>%
dplyr::slice_min(Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1)
control_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-cotyledon-D7") %>%
pull(sample_id)
case_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-root-D7") %>%
pull(sample_id)
object <-
mutate_fc(object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
mean_median = "mean")
object <-
mutate_p_value(
object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
method = "t.test",
p_adjust_methods = "BH"
)
volcano_plot(object = object,
add_text = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value") +
scale_size_continuous(range = c(0.5, 5))
differential_metabolites <-
extract_variable_info(object = object) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value < 0.05)
library(massdatabase)
kegg_hsa_pathway <- read_kegg_pathway()
lapply(kegg_hsa_pathway,function(x) x$pathway_id)
kegg_ath_pathway <- massdatabase::convert_kegg2metpath(kegg_ath_pathway)
kegg_hsa_pathway <- massdatabase::convert_kegg2metpath(kegg_hsa_pathway)
massdatabase::convert_kegg2metpath(kegg_hsa_pathway)
convert_kegg2metpath
massdatabase::convert_kegg2metpath(kegg_hsa_pathway)
massdatabase::download_kegg_pathway(organism = 'zma')
kegg_zma_pathway <- read_kegg_pathway()
kegg_zma_pathway
kegg_zma_pathway <- massdatabase::convert_kegg2metpath(kegg_zma_pathway)
massdatabase::convert_kegg2metpath(kegg_zma_pathway)
convert_kegg2metpath
data = kegg_zma_pathway
tidymass::update_tidymass()
remotes::install_github("tidymass/metpaht")
remotes::install_github("tidymass/metpath")
class(pathway_database)
library(tidymass)
library(tidyverse)
library(tidymassshiny)
load("/Volumes/Data_Temp/00.Demo_KQ/massdataset/08.object_merge.rda")
object = object_merge %>%
activate_mass_dataset(what = "annotation_table") %>%
group_by(variable_id) %>%
dplyr::slice_min(order_by = Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1) %>%
group_by(Compound.name) %>%
dplyr::slice_min(Level,n = 1) %>%
dplyr::slice_max(Total.score,n = 1)
control_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-cotyledon-D7") %>%
pull(sample_id)
case_sample_id =
object %>%
activate_mass_dataset(what = "sample_info") %>%
filter(group == "T1-root-D7") %>%
pull(sample_id)
object <-
mutate_fc(object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
mean_median = "mean")
object <-
mutate_p_value(
object = object,
control_sample_id = control_sample_id,
case_sample_id = case_sample_id,
method = "t.test",
p_adjust_methods = "BH"
)
volcano_plot(object = object,
add_text = TRUE,
text_from = "Compound.name",
point_size_scale = "p_value") +
scale_size_continuous(range = c(0.5, 5))
differential_metabolites <-
extract_variable_info(object = object) %>%
filter(fc > 2 | fc < 0.5) %>%
filter(p_value < 0.05)
library(metpath)
massdatabase::download_kegg_pathway(organism = 'zma')
kegg_zma_pathway <- read_kegg_pathway()
read_kegg_pathway
library(massdatabase)
library(metpath)
kegg_zma_pathway <- read_kegg_pathway()
lapply(kegg_zma_pathway,function(x) x$pathway_id)
kegg_zma_pathway <- massdatabase::convert_kegg2metpath(data = kegg_zma_pathway)
massdatabase::download_kegg_pathway(organism = 'hsa')
remotes::install_github("tidymass/massdatabase")
