temp_sample_info
temp_sample_info %>%
dplyr::select(sample_id,key)
object %>%
activate_mass_dataset("sample_info") %>%
dplyr::left_join(temp_sample_info %>%
dplyr::select(sample_id,key),by = "sample_id")
object_pos_raw %>%
activate_mass_dataset('sample_info') %>%
select(-key)
object_pos_raw %>%
activate_mass_dataset('sample_info') %>%
dplyr::select(-key)
object_pos_raw <-
object_pos_raw %>%
activate_mass_dataset('sample_info') %>%
dplyr::select(-key)
find_noise_multiple(object = object_pos_raw,tag = 'group',qc_na_freq = 0.2,S_na_freq = 0.5)
if("key" %in% colnames(object@sample_info)){object <- object %>% activate_mass_dataset('sample_info') %>% dplyr::select(-key)}
if(tag == "class") {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::mutate(key = class)
} else {
temp_sample_info = object %>%
extract_sample_info() %>%
dplyr::rename("tag" = tag) %>%
dplyr::rename("xx" = "class") %>%
dplyr::mutate(key = dplyr::case_when(
xx == "QC" ~ "QC",
TRUE ~ tag
))
}
temp_keys = temp_sample_info %>% dplyr::pull(key) %>% unique()
object <-
object %>%
activate_mass_dataset("sample_info") %>%
dplyr::left_join(temp_sample_info %>%
dplyr::select(sample_id,key),by = "sample_id")
#> na_freq
for (i in 1:length(temp_keys)) {
temp_id = object %>%
activate_mass_dataset(what = "sample_info") %>%
dplyr::filter(key == temp_keys[i]) %>%
dplyr::pull(sample_id)
if (temp_keys[i] == "QC") {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
} else {
object <- object %>%
mutate_variable_na_freq(according_to_samples = temp_id)
}
}
object_mv = object %>%
activate_mass_dataset(what = "variable_info") %>%
dplyr::filter(
na_freq <= qc_na_freq,
dplyr::if_any(dplyr::starts_with("na_freq."), ~ . <= S_na_freq)
)
devtools::document()
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/object_pos_raw.rda")
object_pos_raw %>%
`+`(1) %>%
log(2) %>%
scale() %>%
detect_outlier()
library(tidyverse)
object_pos_raw %>%
`+`(1) %>%
log(2) %>%
scale() %>%
detect_outlier()
library(tidymass)
object_pos_raw %>%
`+`(1) %>%
log(2) %>%
scale() %>%
detect_outlier()
temp_pos <-
object_pos_raw %>%
`+`(1) %>%
log(2) %>%
scale() %>%
detect_outlier()
extract_outlier_table(temp_pos)
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
)
temp_condition = 'pc_sd'
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(temp_condition))
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(condition,temp_condition))
temp_condition = c('according_to_na','pc_sd')
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(condition,temp_condition))
temp_condition = c('according_to_na','pc_sd') %>% paste0(collapse = "|")
temp_condition
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(condition,temp_condition))
temp_condition = c('according_to_na') %>% paste0(collapse = "|")
temp_condition
temp_condition = c('according_to_na',"pc_sd","pc_mad") %>% paste0(collapse = "|")
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(condition,temp_condition))
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(condition,temp_condition)) %>%
group_by(sample_id) %>%
summarise(isTRUE(judge))
extract_outlier_table(temp_pos) %>%
rownames_to_column('sample_id') %>%
pivot_longer(
!sample_id,values_to = 'judge',names_to = 'condition'
) %>%
filter(str_detect(condition,temp_condition)) %>%
group_by(sample_id) %>%
summarise(tempx = isTRUE(judge))
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
run_tidymass_shiny()
devtools::document()
library(tidyverse)
library(tidymass)
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
library(tidyverse)
library(tidymass)
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/POS/Objects/step1/object_pos_impute.rda")
object_pos_impute %>% normalize_data(method = 'svr')
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
library(tidymass)
library(tidyverse)
library(tidymassshiny)
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/POS/Objects/step1/object_pos_impute.rda")
object_pos_impute %>% extract_sample_info()
object_pos_impute %>% extract_sample_info() %>%
dplyr::mutate(batch = "1")
object_pos_impute<-
object_pos_impute %>% activate_mass_dataset("sample_info") %>%
mutate(batch = "1")
save(object_pos_impute,"/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/POS/Objects/step1/object_pos_impute.rda")
save(object_pos_impute,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/POS/Objects/step1/object_pos_impute.rda")
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/NEG/Objects/step1/object_neg_impute.rda")
object_neg_impute<-
object_neg_impute %>% activate_mass_dataset("sample_info") %>%
mutate(batch = "1")
object_neg_impute
save(object_neg_impute,file = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/NEG/Objects/step1/object_neg_impute.rda")
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
library(tidyverse)
library(tidymass)
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
process_data(path = "/Volumes/TerraMas_A/SynologyDrive/5_测试代码/MTBLS2688/MS1/NEG/")
devtools::document()
run_tidymass_shiny()
devtools::document()
library(tidyverse)
library(tidymass)
library(tidymassshiny)
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
library(tidymass)
library(tidyverse)
library(tidymassshiny)
run_tidymass_shiny()
run_tidymass_shiny(\)
run_tidymass_shiny()
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
run_tidymass_shiny()
load("/Volumes/TerraMas_A/SynologyDrive/5_测试代码/00.DemoHeter/Result/POS/Objects/step1/object_pos_af.rda")
object_pos_af@variable_info
object_pos_af@annotation_table
ms2_plot_mass_dataset_mz(
object = object_pos_af
polarity = "positive",
ms2_plot_mass_dataset_mz(
object = object_pos_af,
polarity = "positive",
variable_id = "M108T165_POS",
database = MDAtoolkits::mona_database0.0.4,
show_mz = TRUE,
show_detail = TRUE
)
library(tidymass)
ms2_plot_mass_dataset_mz(
object = object_pos_af,
polarity = "positive",
variable_id = "M108T165_POS",
database = MDAtoolkits::mona_database0.0.4,
show_mz = TRUE,
show_detail = TRUE
)
library(tidymass)
library(tidymassshiny)
library(MDAtoolkits)
run_tidymass_shiny()
ms2_plot_mass_dataset_mz(
object = object_pos_af,
polarity = "positive",
variable_id = "M108T165_POS",
database = MDAtoolkits::mona_database0.0.4,
show_mz = TRUE,
show_detail = TRUE
)
run_tidymass_shiny()
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "tidymassShiny", # The Name of the package containing the App
pkg_title = "PKG_TITLE", # The Title of the package containing the App
pkg_description = "PKG_DESC.", # The Description of the package containing the App
author_first_name = "AUTHOR_FIRST", # Your First Name
author_last_name = "AUTHOR_LAST", # Your Last Name
author_email = "AUTHOR@MAIL.COM", # Your Email
repo_url = NULL, # The URL of the GitHub Repo (optional),
pkg_version = "0.0.1" # The Version of the package containing the App
)
remotes::install_github('xuebinzhang-lab/plantmdb')
library(tidyverse)
library(tidymass)
library(tidymassshiny)
library(plantmdb)
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
# Document and reload your package
golem::document_and_reload()
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "tidymassshiny", # The Name of the package containing the App
pkg_title = "An Amazing Shiny App", # The Title of the package containing the App
pkg_description = "Shiny App for tidymass", # The Description of the package containing the App
author_first_name = "Xiao", # Your First Name
author_last_name = "Wang", # Your Last Name
author_email = "shawnwang2016@126.com", # Your Email
repo_url = 'https://github.com/tidymass/tidymass_shiny', # The URL of the GitHub Repo (optional),
pkg_version = "0.0.0.92" # The Version of the package containing the App
)
## Set {golem} options ----
golem::set_golem_options()
## Install the required dev dependencies ----
golem::install_dev_deps()
## Create Common Files ----
## See ?usethis for more information
usethis::use_mit_license("Golem User") # You can set another license here
## Favicon ----
# If you want to change the favicon (default is golem's one)
golem::use_favicon(path = "inst/app/www/favicon.ico") # path = "path/to/ico". Can be an online file.
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
library(plantmdb)
data(mona_database0.0.4)
MoNA = data(mona_database0.0.4)
MoNA
mona_database0.0.4
devtools::document()
run_tidymass_shiny()
library(plantmdb)
massbank_database0.0.4
mona_database0.0.4
respect_database0.0.1
plasma_database0.0.1
orbitrap_database0.0.3
kegg_plant_database0.0.1
knapsack_agri_database0.0.1
ath_plantcyc.database0.0.1
metabobase_database0.0.1
library(tidymass)
library(tidyverse)
library(plantmdb)
library(tidymassshiny)
run_tidymass_shiny()
library(tidyverse)
library(tidymass)
library(plantmdb)
library(tidymassshiny)
run_tidymass_shiny()
load("/Volumes/Samsung_T5/01.data/demo_data/Result/NEG/Objects/step1/object_neg_raw.rda")
load("/Volumes/Samsung_T5/01.data/demo_data/Result/POS/Objects/step1/object_pos_raw.rda")
temp_pos <-
object_neg_raw %>% extract_expression_data() %>%
rownames_to_column('variable_id')
temp_pos <-
object_pos_raw %>% extract_expression_data() %>%
rownames_to_column('variable_id')
temp_neg <-
object_neg_raw %>% extract_expression_data() %>%
rownames_to_column('variable_id')
temp_pos
temp_vari <-
object_pos_raw %>% extract_variable_info()
temp_vari
temp_vari_pos <-
object_pos_raw %>% extract_variable_info() %>%
dplyr::mutate(ion = "pos")
temp_vari_neg <-
object_neg_raw %>% extract_variable_info() %>%
dplyr::mutate(ion = "neg")
temp_vari_neg
temp_vari <- rbind(temp_vari_pos,temp_vari_neg)
temp_expr <- rbind(temp_pos,temp_neg)
temp_expr
temp_vari
temp_vari <- rbind(temp_vari_pos,temp_vari_neg) %>%
relocate(ion,.after = variable_id)
temp_vari
temp_expr <- rbind(temp_pos,temp_neg)
peak_picking <- left_join(temp_vari,temp_expr)
peak_picking
write.csv(peak_picking,"/Volumes/Samsung_T5/01.data/demo_data/02.From_table/peakpicking.csv",row.names = F)
run_tidymass_shiny()
temp_vari <- rbind(temp_vari_pos,temp_vari_neg)
temp_expr <- rbind(temp_pos,temp_neg)
peak_picking <- left_join(temp_vari,temp_expr)
write.csv(peak_picking,"/Volumes/Samsung_T5/01.data/demo_data/02.From_table/peakpicking.csv",row.names = F)
library(tidymass)
library(tidyverse)
library(tidymassshiny)
library(plantmdb)
run_tidymass_shiny()
library(shiny)
library(shinyjs)
ui <- fluidPage(
useShinyjs(),  # 启用 shinyjs
titlePanel("Shiny 弹窗示例"),
sidebarLayout(
sidebarPanel(
actionButton("show_alert", "显示弹窗")  # 按钮触发弹窗
),
mainPanel(
textOutput("message")
)
)
)
server <- function(input, output, session) {
observeEvent(input$show_alert, {
# 当点击按钮时弹出提示框
js$alert("这是一个弹窗提醒！")
})
output$message <- renderText({
"点击按钮触发弹窗！"
})
}
shinyApp(ui, server)
massqc::show_sample_missing_values()
library(tidymass)
library(tidyverse)
library(tidymassshiny)
library(plantmdb)
run_tidymass_shiny()
library(plantmdb)
library(plantmdb)
devtools::install_github("xuebinzhang-lab/plantmdb")
library(plantmdb)
massqc::show_sample_missing_values
version("massqc")
massqc
massqc::show_sample_missing_values
massdataset::::show_sample_missing_values
massdataset::show_sample_missing_values
devtools::document()
devtools::document()
run_tidymass_shiny()
massqc_sample_correlation
library(massqc)
massqc_sample_correlation
devtools::document()
devtools::document()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
list(
activarte_compare_group = input$activarte_compare_group %>% as.character(),
col_index = input$col_index %>% as.character(),
left = input$sample_by %>% as.character(),
right = input$variable_by %>% as.character(),
right = input$variable_by %>% as.character(),
right = input$variable_by %>% as.character(),
right = input$variable_by %>% as.character(),
)
sample_info
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
load("/Volumes/Samsung_T5/20250125-LGY-untargeted/massdataset/08.object_merge.rda")
object_merge %>% extract_sample_info()
library(massstat)
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
c(control_sample_id,case_sample_id)
devtools::document()
run_tidymass_shiny()
devtools::document()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
devtools::document()
run_tidymass_shiny()
run_tidymass_shiny()
